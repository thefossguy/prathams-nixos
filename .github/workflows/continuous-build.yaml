name: Continuous Build
run-name: Continuous Build

on:
  workflow_dispatch:
    branches:
      - '*'
      - '!legacy' # the 'legacy' branch has non flake nixos config and will be dropped immediately after nixos-24.05
  push:
    branches:
      - '*'
      - '!legacy' # the 'legacy' branch has non flake nixos config and will be dropped immediately after nixos-24.05
  pull_request:
    branches:
      - '*'
      - '!legacy' # the 'legacy' branch has non flake nixos config and will be dropped immediately after nixos-24.05
  schedule:
    - cron: '30 5 * * *' # Everyday, at 00:00 IST

env:
  NIXPKGS_RISCV_GHC_BOOTSTRAP_ISSUE: https://github.com/nixos/nixpkgs/issues/231537

jobs:
  unconditional_lockfile_update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main

      - name: Updating the flake lockfile
        run: |
          nix flake update
          cp flake.lock{,.new}
          git restore flake.lock

      - name: Uploading the flake lockfile artifact
        uses: actions/upload-artifact@main
        with:
          name: artifacts
          path: flake.lock.new

      - name: Delete the new flake lockfile
        run: |
          rm flake.lock.new

  iso:
    runs-on: ubuntu-latest
    needs: unconditional_lockfile_update
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        linux_arches: [ aarch64, riscv64, x86_64 ]

    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: "extra-platforms = aarch64-linux riscv64-linux x86_64-linux"
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setting up QEMU
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y binfmt-support qemu-user-static

      - name: Download artifacts from the previous workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_number }} - 1
          path: prev

      - name: Download artifacts from the current workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_id }}
          path: curr

      - name: Building NixOS ISO for ${{ matrix.linux_arches }}
        run: |
          if [[ '${{ matrix.linux_arches }}' != 'riscv64' ]]; then
              if ! diff {prev,curr}/artifacts/flake.lock.new > /dev/null; then
                  mv curr/artifacts/flake.lock.new flake.lock
                  NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1 nix build --impure --print-build-logs --show-trace .#isos.${{ matrix.linux_arches }}
              else
                  echo 'No changes to the flake.lock file from the previous workflow, skipping this workflow.'
              fi
          else
              echo "RISC-V job for ${{ github.job }} skipped until $NIXPKGS_RISCV_GHC_BOOTSTRAP_ISSUE is resolved."
          fi

  nixos:
    runs-on: ubuntu-latest
    needs: unconditional_lockfile_update
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        machines: [ flameboi, sentinel, reddish, mahadev, pawandev, stuti, vaaman, vaayu ]

    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: "extra-platforms = aarch64-linux riscv64-linux x86_64-linux"
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setting up QEMU
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y binfmt-support qemu-user-static

      - name: Download artifacts from the previous workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_number }} - 1
          path: prev

      - name: Download artifacts from the current workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_id }}
          path: curr

      - name: Building NixOS configuration for ${{ matrix.machines }}
        run: |
          if [[ "$(nix eval --raw .#nixosConfigurations.${{ matrix.machines }}.pkgs.stdenv.system)" != 'riscv64-linux' ]]; then
              if ! diff {prev,curr}/artifacts/flake.lock.new > /dev/null; then
                  mv curr/artifacts/flake.lock.new flake.lock
                  NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1 nix build --impure --print-build-logs --show-trace .#machines.${{ matrix.machines }}
              else
                  echo 'No changes to the flake.lock file from the previous workflow, skipping this workflow.'
              fi
          else
              echo "RISC-V job for ${{ github.job }} skipped until $NIXPKGS_RISCV_GHC_BOOTSTRAP_ISSUE is resolved."
          fi

  hm-linux:
    runs-on: ubuntu-latest
    needs: unconditional_lockfile_update
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        linux_arches: [ aarch64, riscv64, x86_64 ]
        homeOf: [ pratham ]

    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: "extra-platforms = aarch64-linux riscv64-linux x86_64-linux"
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setting up QEMU
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y binfmt-support qemu-user-static

      - name: Download artifacts from the previous workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_number }} - 1
          path: prev

      - name: Download artifacts from the current workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_id }}
          path: curr

      - name: Building home-manager configuration for ${{ matrix.homeOf }}
        run: |
          if [[ '${{ matrix.linux_arches }}' != 'riscv64' ]]; then
              if ! diff {prev,curr}/artifacts/flake.lock.new > /dev/null; then
                  mv curr/artifacts/flake.lock.new flake.lock
                  NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1 nix build --impure --print-build-logs --show-trace .#homeOf.${{ matrix.linux_arches }}-linux.${{ matrix.homeOf }}
              else
                  echo 'No changes to the flake.lock file from the previous workflow, skipping this workflow.'
              fi
          else
              echo "RISC-V job for ${{ github.job }} skipped until $NIXPKGS_RISCV_GHC_BOOTSTRAP_ISSUE is resolved."
          fi

  hm-darwin:
    runs-on: macos-latest
    needs: unconditional_lockfile_update
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        homeOf: [ pratham ]

    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Download artifacts from the previous workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_number }} - 1
          path: prev

      - name: Download artifacts from the current workflow
        uses: actions/download-artifact@main
        with:
          run-id: ${{ github.run_id }}
          path: curr

      - name: Building home-manager configuration for ${{ matrix.homeOf }}
        run: |
          if ! diff {prev,curr}/artifacts/flake.lock.new > /dev/null; then
              mv curr/artifacts/flake.lock.new flake.lock
              nix build --print-build-logs --show-trace .#homeOf."$(uname -m)"-darwin.${{ matrix.homeOf }}
          else
              echo 'No changes to the flake.lock file from the previous workflow, skipping this workflow.'
          fi
