name: Canary Build
on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  schedule:
    - cron: '30 18 * * *' # Everyday, at 00:00 IST


jobs:
  update-flake-lock:
    name: Update `flake.lock`
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - run: nix flake update
      - uses: actions/upload-artifact@main
        with:
          name: flake-lock
          path: flake.lock
          retention-days: 1
          overwrite: true
          if-no-files-found: error
          compression-level: 9

  canary-build:
    needs: update-flake-lock
    name: Building ${{ matrix.nixTarget }} for ${{ matrix.nixSystem }}
    runs-on: ${{ matrix.nixSystem == 'x86_64-linux' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    continue-on-error: true
    permissions:
      id-token: "write"
      contents: "read"
    strategy:
      matrix:
        nixTarget: [ nixosConfigurations, homeConfigurations, devShells, packages, ]
        nixSystem: [ aarch64-linux, x86_64-linux, ]
    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: "extra-substituters = s3://thefossguy-public-nix-binary-cache?region=us-lax&endpoint=us-lax-1.linodeobjects.com\nextra-trusted-public-keys = thefossguy-public-nix-binary-cache:g29fjBRU/VGj6kkIQqjm0o5sxWduZ1hNNLTnSeF/AAU="

      - name: Verify nix cache availability
        run: nix store info --store 's3://thefossguy-public-nix-binary-cache?region=us-lax&endpoint=us-lax-1.linodeobjects.com'

      - name: View the Nix config
        run: nix config show

      - uses: actions/download-artifact@main
        with:
          name: flake-lock
          path: .

      - name: Evaluating the `outPath`s for buildable Nix targets
        run: python3 ./scripts/nix-ci/builder.py --${{ matrix.nixTarget }} --exclusive-nix-system-${{ matrix.nixSystem }} --link-only --no-print-missing-paths

      - name: Running CI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_THEFOSSGUY_LINODE_CACHE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_THEFOSSGUY_LINODE_CACHE_SECRET_KEY }}
        run: python3 ./scripts/nix-ci/builder.py --${{ matrix.nixTarget }} --exclusive-nix-system-${{ matrix.nixSystem }}

      - name: Look at results
        run: ls -alh | grep result || echo 'Nothing was built'
